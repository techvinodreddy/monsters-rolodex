{"version":3,"sources":["components/Card/Card.jsx","components/CardList/CardList.jsx","components/SearchBox/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","marvel","id","name","CardList","marvels","map","hero","SearchBox","placeholder","handleChange","type","onChange","App","useState","monsters","setmonsters","search","setsearch","filteredMonistors","filter","monistor","toLowerCase","includes","fetch","then","response","json","users","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAWeA,EATF,SAACC,GACZ,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,OAAOC,GAAvC,4BACvB,mCAAML,EAAMI,OAAOE,KAAnB,WCOSC,G,MAVE,SAACP,GAChB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMQ,QAAQC,KAAI,SAAAC,GAAI,OAClB,cAAC,EAAD,CAAoBN,OAAQM,GAAjBA,EAAKL,WCKZM,G,MAVG,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAC/B,OACI,uBAAOZ,UAAU,SACfa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCuBHG,MAzBf,WAEE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAoBJ,EAASK,QAAO,SAAAC,GAAQ,OAChDA,EAASlB,KAAKmB,cAAcC,SAASN,EAAOK,kBAU9C,OALAE,MAAM,8CACLC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAAG,GAAK,OAAIZ,EAAYY,MAIzB,sBAAK9B,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAX9B,SAACmB,GAAD,OAAOX,EAAUW,EAAEC,OAAOC,UAYrC,cAAC,EAAD,CAAU1B,QAASc,QCbVa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.20f12778.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Card.css'\r\nconst Card = (props) => {\r\n  return (\r\n    <div className='card-container'>\r\n      <img alt=\"robohash\" src={`https://robohash.org/${props.marvel.id}?set=set2&size=180x180`} />\r\n      <h2> {props.marvel.name} </h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport Card from '../Card/Card'\r\nimport './CardList.css'\r\nconst CardList = (props) => {\r\n  return (\r\n    <div className='card-list'>\r\n      {props.marvels.map(hero => (\r\n           <Card key={hero.id} marvel={hero}/> \r\n         ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardList\r\n","import React from \"react\";\r\nimport \"./SearchBox.css\";\r\nconst SearchBox = ({placeholder, handleChange}) => {\r\n  return (\r\n      <input className='search'\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n      />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport CardList from './components/CardList/CardList';\nimport SearchBox from './components/SearchBox/SearchBox';\n\nfunction App() {\n\n  const [monsters, setmonsters] = useState([])\n  const [search, setsearch] = useState('')\n\n  const filteredMonistors = monsters.filter(monistor => \n    monistor.name.toLowerCase().includes(search.toLowerCase()))\n  \n  const Change = (e) => setsearch(e.target.value)\n\n\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then((response) => response.json())\n  .then(users => setmonsters(users))\n\n  \n  return (\n    <div className='App'>\n      <h1> Monsters Rolodex </h1>\n      <SearchBox placeholder='search monsters' handleChange={Change}/>\n      <CardList marvels={filteredMonistors}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}